SHIP THE GAME

Ship the Game is a my fun way to study Design Patterns and DDD programing. The goal here is not making a game or study a game framework, but create an application with good programing principles using layers, tests units, real OO, etc

<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/"><img alt="Creative Commons License" style="border-width:0" src="http://i.creativecommons.org/l/by-nc-sa/3.0/88x31.png" /></a><br /><span xmlns:dc="http://purl.org/dc/elements/1.1/" property="dc:title">Ship-The_Game</span> is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/">Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License</a>.

The project was created Netbeans 6.8, and the only lib I'm using is Mockito for tests. The graphics are Swing based

So far I did:

- The main application (ship.main.ShipApp)
- the bootstrap game class (ship.application.ShipGame)
- Helper classes: Positon, Time, Swing Utils, etc
- the some domain classes:
  -> Ship
  -> Sensor
  -> Power Grid
  -> Power Generator
  -> Move Behavior
  -> Battery
- The UI uses Swing classes and is 2D. I'm trying to focus in a *TRUE* MVC implementation. Of course I'll love to see someone creating a 3D version.
- I'm plaining to create web services to the game, so it can be played anywhere for many people.
- I created test units (JUnit 4) for the most important classes. I gave up to test all since I'm doing a lot of changes in the project and I don't have time.


Many domain classes can be extended for more realistic implementations and complex behaviors, using the Strategy Design Pattern. I'm trying to keep the dependences at mininum level.

For the future I'm planning
- weapons and defence systems... FIGHT !!!
- Stelar bases and science outposts
- Some A.I. ships and NPCs
- Asteroids and minning

Please send me any critics, sugestions, ideas, etc. I promise to read and answer asap.

Felipe T. Farias


